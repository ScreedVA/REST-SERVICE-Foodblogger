{
	"item": [
		{
			"name": "GETS",
			"item": [
				{
					"name": "GET root",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								""
							]
						},
						"description": "Returns json containing all posts made by users regardless of user_id"
					},
					"response": [
						{
							"name": "GET root Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"posts\": [\n        {\n            \"body\": \"Great location and atmosphere with plenty of outside or inside seating. Exceptional breakfast and good coffee... I would definitely recommend the \\n'silo' breakfast with added mushrooms\",\n            \"categroy\": \"Breakfast\",\n            \"date_created\": \"Wed, 12 Jun 2024 00:00:00 GMT\",\n            \"id\": 8,\n            \"title\": \"Silo Coffee\",\n            \"user_id\": 3\n        }\n    ]\n}"
						},
						{
							"name": "GET root Unsuccessful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"error\": \"Posts Not Found\"}"
						}
					]
				},
				{
					"name": "GET get_posts_by_user_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/get_posts_by_user_id/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"get_posts_by_user_id",
								"3"
							]
						},
						"description": "Returns 200 if posts found, else 404"
					},
					"response": [
						{
							"name": "GET get_posts_by_user_id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_posts_by_user_id/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_posts_by_user_id",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"posts\": [\r\n        {\r\n            \"body\": \"Great coffee in a not-s-hidden (anymore) courtyard in Mitte. Come for breakfast and get the smashed avocado with poached egg.\",\r\n            \"categroy\": \"Breakfast\",\r\n            \"date_created\": \"Wed, 12 Jun 2024 00:00:00 GMT\",\r\n            \"id\": 7,\r\n            \"title\": \"Father Carpenter\",\r\n            \"user_id\": 3\r\n        },\r\n}"
						},
						{
							"name": "GET get_posts_by_user_id Unsuccessful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_posts_by_user_id/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_posts_by_user_id",
										"3"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"error\": \"User Not Found\"}"
						}
					]
				},
				{
					"name": "GET get_post_by_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/get_post_by_id/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"get_post_by_id",
								"7"
							]
						},
						"description": "Endpoint returns post of correponding id and 200"
					},
					"response": [
						{
							"name": "GET get_post_by_id Succesful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_post_by_id/7",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_post_by_id",
										"7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"post\": {\n        \"body\": \"Great coffee in a not-s-hidden (anymore) courtyard in Mitte. Come for breakfast and get the smashed avocado with poached egg.\",\n        \"categroy\": \"Breakfast\",\n        \"date_created\": \"Wed, 12 Jun 2024 00:00:00 GMT\",\n        \"id\": 7,\n        \"title\": \"Father Carpenter\",\n        \"user_id\": 3\n    }\n}"
						},
						{
							"name": "GET get_post_by_id Unsuccesful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_post_by_id/7",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_post_by_id",
										"7"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"response\": \"Not Found Error\"}"
						}
					]
				},
				{
					"name": "GET get_user_by_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/get_user_by_id/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"get_user_by_id",
								"4"
							]
						},
						"description": "Endpoint returns user at corresponding id and 200"
					},
					"response": [
						{
							"name": "GET get_user_by_id Succesful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_user_by_id/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_user_by_id",
										"4"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"address\": \"123 example str.\",\n    \"bio\": \"I like testing food\",\n    \"date_joined\": \"Wed, 12 Jun 2024 00:00:00 GMT\",\n    \"date_of_birth\": \"Sat, 01 Jan 2000 00:00:00 GMT\",\n    \"email\": \"testuser3@example.com\",\n    \"id\": 4,\n    \"name\": \"TestUser1\",\n    \"password\": \"password123\"\n}"
						},
						{
							"name": "GET get_user_by_id Unsuccesful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_user_by_id/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_user_by_id",
										"4"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"error\": \"User Not Found\"}"
						}
					]
				},
				{
					"name": "GET get_all_users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/get_all_users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"get_all_users"
							]
						},
						"description": "Endpoint returns all users from database and 200"
					},
					"response": [
						{
							"name": "GET get_all_users Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_all_users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_all_users"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n{\n\"address\": \"example str, 123\",\n\"bio\": \"Passionate dessert enthusiast with a sweet tooth and a penchant for indulgence\",\n\"date_joined\": \"Wed, 12 Jun 2024 00:00:00 GMT\",\n\"date_of_birth\": null,\n\"email\": \"bob@example.com\",\n\"id\": 1,\n\"name\": \"Bob\",\n    \"password\": \"password123\"\n    }\n]"
						},
						{
							"name": "GET get_all_users Unsuccessful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_all_users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_all_users"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "GET get_all_images",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/get_all_images",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"get_all_images"
							]
						},
						"description": "Endpoint returns all images from database and 200"
					},
					"response": [
						{
							"name": "GET get_all_images Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_all_images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_all_images"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\"images\": [\n{\n\"id\": 1,\n\"img\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAA...\",\n            \"mimetype\": \"image/jpeg\",\n            \"name\": \"10_post.jpg\",\n            \"post_id\": 10,\n            \"user_id\": null\n        }\n    ]\n}"
						},
						{
							"name": "GET get_all_images Unsuccessful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_all_images",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_all_images"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"error\": \"Images Not Found\"}"
						}
					]
				},
				{
					"name": "GET get_image_by_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/get_image_by_id/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"get_image_by_id",
								"1"
							]
						},
						"description": "Endpoint returns image at corresponding id if it exists and 200"
					},
					"response": [
						{
							"name": "GET get_image_by_id Succesful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_image_by_id/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_image_by_id",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n\"image\": {\r\n\"id\": 1,\r\n\"img\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAA...\",\r\n        \"mimetype\": \"image/jpeg\",\r\n        \"name\": \"10_post.jpg\",\r\n        \"post_id\": 10,\r\n        \"user_id\": null\r\n    }\r\n}"
						},
						{
							"name": "GET get_image_by_id Unsuccesful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_image_by_id/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_image_by_id",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"error\": \"Images Not Found\"}"
						}
					]
				},
				{
					"name": "GET get_images_by_post_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/get_images_by_post_id/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"get_images_by_post_id",
								"10"
							]
						},
						"description": "Endpoint returns images at corresponding post_id if they exist and 200"
					},
					"response": [
						{
							"name": "GET get_images_by_post_id Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_images_by_post_id/10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_images_by_post_id",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n \"images\": [\r\n {\r\n\"id\": 1,\r\n\"img\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAA...\",\r\n            \"mimetype\": \"image/jpeg\",\r\n            \"name\": \"10_post.jpg\",\r\n            \"post_id\": 10,\r\n            \"user_id\": null\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "GET get_images_by_post_id Unsuccessful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/get_images_by_post_id/10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"get_images_by_post_id",
										"10"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"error\": \"Images Not Found\"}"
						}
					]
				}
			]
		},
		{
			"name": "PUTS",
			"item": [
				{
					"name": "PUT edit_user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"TestUser1\",\r\n\"email\": \"testuser3@example.com\",\r\n\"password\": \"password123\",\r\n    \"date_of_birth\": \"2000-01-01\",\r\n    \"address\": \"123 example str.\",\r\n    \"bio\": \"I like testing alot of food\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/edit_user/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"edit_user",
								"4"
							]
						},
						"description": "Endpoint checks if user exists at correponding id and edits and replaces user data with new json input."
					},
					"response": [
						{
							"name": "PUT edit_user Succesful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"TestUser1\",\r\n\"email\": \"testuser3@example.com\",\r\n\"password\": \"password123\",\r\n\"date_of_birth\": \"2000-01-01\",\r\n\"address\": \"123 example str.\",\r\n\"bio\": \"I like testing alot of food\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/edit_user/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"edit_user",
										"4"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\"user\": {\n\"address\": \"123 example str.\",\n\"bio\": \"I like testing alot of food\",\n\"date_joined\": \"Wed, 12 Jun 2024 00:00:00 GMT\",\n\"date_of_birth\": \"Sat, 01 Jan 2000 00:00:00 GMT\",\n\"email\": \"testuser3@example.com\",\n\"id\": 4,\n\"name\": \"TestUser1\",\n\"password\": \"password123\"\n}\n}"
						},
						{
							"name": "PUT edit_user Unsuccessful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/edit_user/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"edit_user",
										"4"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\"error\": \"Invalid input\"\n}"
						}
					]
				},
				{
					"name": "PUT edit_post",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"title\":\"I tested out a new Breakfast Again\",\r\n\"body\": \"I like testing out breakfast ideas\",\r\n\"category\": \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/edit_post/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"edit_post",
								"10"
							]
						},
						"description": "Endpoint check if post exists at correponding id and edits and replaces post data with new json input."
					},
					"response": [
						{
							"name": "PUT edit_post Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"I tested out a new Breakfast Again\",\r\n    \"body\": \"I like testing out breakfast ideas\",\r\n    \"category\": \"Breakfast\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/edit_post/10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"edit_post",
										"10"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"body\": \"I like testing out breakfast ideas\",\n        \"categroy\": \"Breakfast\",\n        \"date_created\": \"Wed, 12 Jun 2024 00:00:00 GMT\",\n        \"id\": 10,\n        \"title\": \"I tested out a new Breakfast Again\",\n        \"user_id\": 1\n    }\n}"
						},
						{
							"name": "PUT edit_post Unsuccesful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"I tested out a new Breakfast Again\",\r\n    \"body\": \"I like testing out breakfast ideas\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/edit_post/10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"edit_post",
										"10"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"error\": \"Missing required fields\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "DELETES",
			"item": [
				{
					"name": "DELETE delete_user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/delete_user/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"delete_user",
								"4"
							]
						},
						"description": "Returns 200 if user deleted successfully or 404 if user not found"
					},
					"response": [
						{
							"name": "DELETE delete_user Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/delete_user/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"delete_user",
										"4"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"reponse\": \"User deleted succesfully\"}"
						},
						{
							"name": "DELETE delete_user Unsuccessful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/delete_user/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"delete_user",
										"4"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"error\": \"User Not Found\"}"
						}
					]
				},
				{
					"name": "DELETE delete_post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/delete_post/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"delete_post",
								"10"
							]
						},
						"description": "Endpoint deletes post at corresponing id if it exists and returns 200"
					},
					"response": [
						{
							"name": "DELETE delete_post Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/delete_post/10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"delete_post",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"response\": \"Post deleted succesfully\"\n}"
						},
						{
							"name": "DELETE delete_post Unsuccessful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/delete_post/10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"delete_post",
										"10"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"response\": \"Post Not Found\"\n}"
						}
					]
				},
				{
					"name": "DELETE delete_image",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/delete_image/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"delete_image",
								"1"
							]
						},
						"description": "Endpoint returns 200 if image deleted succesfully else 404"
					},
					"response": [
						{
							"name": "DELETE delete_image Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/delete_image/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"delete_image",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"response\": \"Image deleted succesfully\"}"
						},
						{
							"name": "DELETE delete_image Unsuccessful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/delete_image/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"delete_image",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\"error\": \"Post Not Found\"}"
						}
					]
				}
			]
		},
		{
			"name": "POSTS",
			"item": [
				{
					"name": "POST create_user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"TestUser1\",\r\n\"email\": \"testuser@example.com\",\r\n\"password\": \"password123\",\r\n\"date_of_birth\": \"2000-01-01\",\r\n    \"address\": \"123 example str.\",\r\n    \"bio\": \"I like testing food\",\r\n    \"profile_image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAA...\"\r\n}\r\n// Cannot pass in image using raw, use form-data as body.",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/create_user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"create_user"
							]
						},
						"description": "Endpoint takes raw json input, passes data into database and returns json response of new user"
					},
					"response": [
						{
							"name": "POST create_user Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\":\"TestUser2\",\r\n\"email\": \"testuser2@example.com\",\r\n\"password\": \"password123\",\r\n\"date_of_birth\": \"2000-01-01\",\r\n\"address\": \"123 example str.\",\r\n\"bio\": \"I like testing food\",\r\n\"profile_image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAA...\"\r\n}\r\n// Cannot pass in image using raw, use form-data as body.",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/create_user",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"create_user"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\"user\": {\n\"address\": \"123 example str.\",\n\"bio\": \"I like testing food\",\n\"date_joined\": \"Wed, 12 Jun 2024 00:00:00 GMT\",\n\"date_of_birth\": \"Sat, 01 Jan 2000 00:00:00 GMT\",\n\"email\": \"testuser2@example.com\",\n\"id\": 5,\n\"name\": \"TestUser2\",\n\"password\": \"password123\"\n}\n}"
						},
						{
							"name": "POST create_user Unsuccessful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Bob\",\r\n    \"email\": \"testuser@example.com\",\r\n    \"password\": \"password123\",\r\n    \"date_of_birth\": \"2000-01-01\",\r\n    \"address\": \"123 example str.\",\r\n    \"bio\": \"I like testing food\",\r\n    \"profile_image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAA...\"\r\n}\r\n// Cannot pass in image using raw, use form-data as body.",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/create_user",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"create_user"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Name already exists\"\n}"
						}
					]
				},
				{
					"name": "POST create_post",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"I tested out a new Breakfast\",\r\n    \"body\": \"I like testing out breakfast ideas\",\r\n    \"category\": \"Breakfast\",\r\n    \"post_image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAA...\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/create_post/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"create_post",
								"4"
							]
						},
						"description": "Endpoint creates new post and automatically establishes many to one association to user with corresponding id"
					},
					"response": [
						{
							"name": "POST create_post Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"I tested out a new Breakfast\",\r\n    \"body\": \"I like testing out breakfast ideas\",\r\n    \"category\": \"Breakfast\",\r\n    \"post_image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAA...\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/create_post/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"create_post",
										"4"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"post\": {\n        \"body\": \"I like testing out breakfast ideas\",\n        \"categroy\": \"Breakfast\",\n        \"date_created\": \"Wed, 12 Jun 2024 00:00:00 GMT\",\n        \"id\": 11,\n        \"title\": \"I tested out a new Breakfast\",\n        \"user_id\": 4\n    }\n}"
						},
						{
							"name": "POST create_post Unsuccessful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/create_post/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"create_post",
										"4"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"response\": \"Unsupported Media Type\"\n}"
						}
					]
				}
			]
		}
	]
}