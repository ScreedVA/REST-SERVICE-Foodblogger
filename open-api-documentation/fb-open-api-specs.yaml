---
info:
  _postman_id: 7cf29b08-89fd-4ba4-9de0-ed573ae3718d
  name: Food Blogger Open API Specs
  schema: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
  _exporter_id: '34109942'
item:
- name: GET
  item:
  - name: Base Url
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - ''
      description: Returns home page which displays all posts made by users
    response: []
  - name: GET User Profile
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/select_user_profile_view/1
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - select_user_profile_view
        - '1'
        query:
        - key: from_view
          value: user_gallery
          description: Routes user to unrestricted user profile view with editing
            options
          disabled: true
        - key: from_view
          value: home
          description: Routes user to restricted user profile view without editing
            options
          disabled: true
      description: Returns select_user_profile.html at corresponding user_id
    response: []
  - name: GET User Gallery
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/user_gallery/1
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - user_gallery
        - '1'
      description: Routes to user gallery at corresponding user id, where user can
        see all the posts they have made
    response: []
  - name: GET Sign in Page
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/sign_in
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - sign_in
      description: |-
        Returns sign_in_page.html

        To sign in use "POST Sign in request"
    response: []
  - name: GET Sign out Page
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/sign_out
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - sign_out
    response: []
  - name: GET Sign up Page
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/sign_up
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - sign_up
      description: |-
        Returns sign_up.html template

        To sign up use "POST Sign up Page" Response
    response: []
  - name: GET Edit User Page
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/edit_user/1
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - edit_user
        - '1'
      description: Returns edit_user.html page at corresponding user id
    response: []
  - name: GET New Post Page
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/new_post/1
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - new_post
        - '1'
      description: Returns new_post.html page
    response: []
  - name: GET Edit Post Page
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/edit_post/1
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - edit_post
        - '1'
      description: Returns edit_post.html template
    response: []
  - name: GET Post
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/select_post_view/1?from_view=user_gallery
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - select_post_view
        - '1'
        query:
        - key: from_view
          value: user_gallery
          description: Returns post view with edit and delete options
        - key: from_view
          value: home
          description: Returns post view without edit and delete options
          disabled: true
      description: Returns post view of corresponding post id
    response: []
  - name: GET Image
    request:
      method: GET
      header: []
      url:
        raw: http://localhost:5000/select_image_view/6
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - select_image_view
        - '6'
      description: |-
        Returns select_image_view

        Image must be assosciated with a post
    response: []
- name: POST
  item:
  - name: POST Sign in
    request:
      method: POST
      header:
      - key: Content-Type
        value: application/x-www-form-urlencoded
        type: text
      body:
        mode: urlencoded
        urlencoded:
        - key: username
          value: Alice
          description: pass in username
          type: text
        - key: password
          value: password123
          description: pass in password
          type: text
      url:
        raw: http://localhost:5000/sign_in
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - sign_in
      description: |-
        Sign in to a user by passing in a username and password

        Default users:

        Bob, Alice, Charlie

        password: password123
    response: []
  - name: POST Sign up
    request:
      method: POST
      header:
      - key: Content-Type
        value: application/x-www-form-urlencoded
        type: text
      body:
        mode: urlencoded
        urlencoded:
        - key: name
          value: TestUser2
          type: text
        - key: email
          value: email@example.com
          type: text
        - key: password
          value: password123
          type: text
        - key: address
          value: example str. 123
          type: text
        - key: bio
          value: I am a test user and I like food
          type: text
        - key: date_of_birth
          value: '2000-09-21'
          type: text
      url:
        raw: http://localhost:5000/sign_up
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - sign_up
    response: []
  - name: POST New Post
    request:
      method: POST
      header: []
      body:
        mode: formdata
        formdata:
        - key: title
          value: Testing out new Breakfast Ideas
          type: text
        - key: category
          value: Lunch
          type: text
        - key: body
          value: I recently I tested out this new breakfast idea...
          type: text
        - key: image
          type: file
          src: "/C:/Users/chris/Documents/SE/Macromedia/2nd Semester/Backend Development/Semester
            Final Assignment/Project Assignment - Food Blogger - 2nd Semester - Backend
            Development/static/images/Food/Fathers Carpenter.jpg"
      url:
        raw: http://localhost:5000/new_post/1
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - new_post
        - '1'
      description: Creates post for user at corresponding user id
    response: []
- name: PUT
  item:
  - name: PUT Edit User
    request:
      method: PUT
      header: []
      body:
        mode: formdata
        formdata:
        - key: username
          value: TestUser0
          type: text
        - key: email
          value: testuser@example.com
          type: text
        - key: password
          value: password123
          type: text
        - key: address
          value: 123 example street
          type: text
        - key: bio
          value: I am a test user and I like food
          type: text
        - key: date_of_birth
          value: '2002-03-14'
          type: text
        - key: profile_image
          type: file
          src: "/C:/Users/chris/Documents/SE/Macromedia/2nd Semester/Backend Development/Semester
            Final Assignment/Project Assignment - Food Blogger - 2nd Semester - Backend
            Development/static/images/Users/Bob.jpg"
      url:
        raw: http://localhost:5000/edit_user/1
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - edit_user
        - '1'
      description: Returns edit user page of corresponding user id.
    response: []
  - name: PUT Edit Post
    request:
      method: PUT
      header:
      - key: Content-Type
        value: application/x-www-form-urlencoded
        type: text
      body:
        mode: formdata
        formdata:
        - key: title
          value: Testing out new Breakfast Ideas
          type: text
        - key: body
          value: I recently I tested out this new breakfast idea...
          type: text
        - key: image
          type: file
          src: postman-cloud:///1ef2009f-2ad8-4fb0-ba91-89ac61c41bfe
        - key: category
          value: Breakfast
          type: text
      url:
        raw: http://localhost:5000/edit_post/10
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - edit_post
        - '10'
      description: Edit post at corresponding post id
    response: []
- name: DELETE
  item:
  - name: DELETE User
    request:
      method: DELETE
      header: []
      url:
        raw: http://localhost:5000/delete_user/6
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - delete_user
        - '6'
      description: Deletes user with corresponding id
    response: []
  - name: DELETE Post
    request:
      method: DELETE
      header: []
      url:
        raw: http://localhost:5000/delete_post/11
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - delete_post
        - '11'
      description: Deletes post at corresponding post id
    response: []
  - name: DELETE Image
    request:
      method: DELETE
      header: []
      url:
        raw: http://localhost:5000/select_image_view/6
        protocol: http
        host:
        - localhost
        port: '5000'
        path:
        - select_image_view
        - '6'
      description: |-
        Deletes image at corresponding image_id

        Image must be associated with a post
    response: []
